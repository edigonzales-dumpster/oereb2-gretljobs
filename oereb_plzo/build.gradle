import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: "de.undercouch.download"
apply plugin: "ch.so.agi.gretl"

defaultTasks "dbImport"

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')

def pathToPlzDataZip = Paths.get(pathToTempFolder, "PLZO_INTERLIS_LV95.zip")
def plzXtfFilePath = Paths.get(pathToUnzipFolder.toString(), 'PLZO_INTERLIS_LV95', 'PLZO_ITF_LV95.itf')

def iliModelPLZOrtschaft = "PLZOCH1LV95D"
 
//def dbSchemas = ["stage", "live"]
def dbSchemas = ["live"]

def GROUP = "PLZ/Ortschaften-Import"

task download(type: Download) {
    group = GROUP
    description = "Download  PLZ/Ortschaft."
    src 'http://data.geo.admin.ch/ch.swisstopo-vd.ortschaftenverzeichnis_plz/PLZO_INTERLIS_LV95.zip'
    dest pathToTempFolder
    overwrite true

    doLast {
        println "File downloaded to: " + pathToTempFolder
    }
}

task unzipData(type: Copy, dependsOn: 'download') {
    group = GROUP
    description = "Unzip heruntergeladene Daten (data.zip)."
    from zipTree(pathToPlzDataZip)
    into file(pathToUnzipFolder)
    include "**/*.itf"

    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }    
}

dbSchemas.each { dbSchema ->
    task "import_$dbSchema"(type: Ili2pgReplace, dependsOn: unzipData) {
        group = GROUP
        description = "Import PLZ/Ortschaft in die Datenbank."
        database = [dbUriOereb, dbUserOereb, dbPwdOereb]
        dbschema = dbSchema
        models = iliModelPLZOrtschaft
        dataFile = file(plzXtfFilePath)
        dataset = 'ch.swisstopo.plzortschaft'
        disableValidation = true

        doLast {
            println "Data imported into schema $dbSchema of db $dbUriOereb"
        }
    }
}

task dbImport() {
    group = GROUP
    description = "Aggregation task."
    dependsOn {
        tasks.findAll { task -> task.name.startsWith('import_') }
    }    
    
    doLast {
        println "Data import into db finished."
    }
}